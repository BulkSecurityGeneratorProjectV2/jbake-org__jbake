plugins {
    id "eclipse"
    id "idea"
}

// common variables
ext {
    isTravis = (System.getenv("TRAVIS") == "true")
    isTravisPullRequest = (System.getenv("TRAVIS_PULL_REQUEST")) != "false"
    pullRequestId = System.getenv("TRAVIS_PULL_REQUEST")
    pullRequestBranch = System.getenv("TRAVIS_PULL_REQUEST_BRANCH")
    hasGithub = System.getenv("GITHUBTOKEN") && System.getenv("GITHUBREPO")
    hasSonar = System.getenv("SONARORG") && System.getenv("SONARLOGIN")
    sonarDefaultURL = "https://sonarcloud.io"
    sonarDefaultProjectKey = "org.jbake:jbake-base:jbake-core"
    sonarURL = System.getenv("SONARHOST") ?: sonarDefaultURL
    sonarProjectKey = System.getenv("SONARPROJECTKEY") ?: sonarDefaultProjectKey
}

allprojects {
    repositories {
        mavenCentral()
    }
}

task jacocoMerge(type: JacocoMerge) {
    description 'Merge all testreport execution data from subprojects excluding jbake-dist'
    dependsOn subprojects.test
    executionData subprojects.findAll{it.name!="jbake-dist"}.jacocoTestReport.executionData
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn jacocoMerge

    sourceDirectories.from files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.from files(subprojects.sourceSets.main.output)
    executionData.from jacocoMerge.executionData

    reports {
        html.enabled = true
        xml.enabled = true
    }
}

task testReport(type: TestReport) {
    description "Generate an aggregated Testreport for all projects"

    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    group = 'Coverage reports'
    description = 'Uploads the aggregated coverage report to Coveralls'

    dependsOn jacocoRootReport
    // Skip Task if not run on CI Server

    onlyIf { System.env.'CI' }
}
